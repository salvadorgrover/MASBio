offsite$site <- gsub("goshen", "Goshen Road", offsite$site)
offsite$site <- gsub("reedsville", "Reedsville", offsite$site)
offsite <- offsite %>%
mutate(land_type = if_else(site %in% c("Agronomy Farm", "Reedsville", "Jackson Mill"), "Agriculture", "Mine")) %>%
ungroup() %>%
dplyr::select(-c(plot))
offsite$plot_type <- c("Offsite")
offsite$CN <- (offsite$percent_c)/(offsite$percent_n)
pom.new <- pom %>%
subset(date = "August 2022") %>%
dplyr::select(-plot, -crop, -date, -treatment) ##add ratio col if needed
##Offsite
offsite <- read.csv("Data/August 2022/pom_maom_offsite_2022.csv")
offsite$site <- gsub("agronomy_farm", "Agronomy Farm", offsite$site)
offsite$site <- gsub("allstar_mine_1", "Allstar Mine 1", offsite$site)
offsite$site <- gsub("allstar_mine_2", "Allstar Mine 2", offsite$site)
offsite$site <- gsub("jackson_mill", "Jackson Mill", offsite$site)
offsite$site <- gsub("goshen", "Goshen Road", offsite$site)
offsite$site <- gsub("reedsville", "Reedsville", offsite$site)
offsite <- offsite %>%
mutate(land_type = if_else(site %in% c("Agronomy Farm", "Reedsville", "Jackson Mill"), "Agriculture", "Mine")) %>%
ungroup() %>%
dplyr::select(-c(plot))
offsite$plot_type <- c("Offsite")
offsite$CN <- (offsite$percent_c)/(offsite$percent_n)
pom.new <- pom %>%
subset(date = "August 2022") %>%
dplyr::select(-plot, -crop, -date, -treatment) ##add ratio col if needed
pom.new$plot_type <- c("Onsite")
pom.on.off <- rbind(pom.new, offsite) %>%
subset(fraction == "POM")
#POM C
model <- lm(percent_c ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
pom.on.off$log_c <- log(pom.on.off$percent_c)
model <- lm(log_c ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
pom.on.off %>%
ungroup() %>%
levene_test(log_c ~ land_type * plot_type)
anova <- aov(log_c ~ land_type * plot_type, data = pom.on.off)
summary(anova)
tuk <- HSD.test(anova, trt = c("plot_type","land_type"))
tuk
#Boxplot
ggplot(data = pom.on.off, aes(x = land_type, y = percent_c, fill = plot_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
theme_bw() +
labs(x = "Date", y = "Percent C", color = "Site", fill = "Land Type", title = "Percent C POM Offsite") +
scale_fill_brewer(palette = "Set1")
ggplot(data = pom.on.off, aes(x = plot_type, y = percent_c, fill = plot_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
theme_bw() +
labs(x = "Date", y = "Percent C", color = "Site", fill = "Land Type", title = "Percent C POM Offsite") +
scale_fill_brewer(palette = "Set1")
#Bar
ggplot(data = pom.on.off, aes(x = land_type, y = percent_c, fill = plot_type)) +
geom_bar(stat='identity', position = position_dodge(0.9)) +
theme_bw() +
labs(x = "Date", y = "Percent C", color = "Site", fill = "Land Type", title = "Percent C POM Offsite") +
scale_fill_brewer(palette = "Set1")
#POM N
model <- lm(percent_n ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
pom.on.off$log_n <- log(pom.on.off$percent_n)
model <- lm(log_n ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
pom.on.off %>%
ungroup() %>%
levene_test(log_n ~ land_type * plot_type)
anova <- aov(log_n ~ land_type * plot_type, data = pom.on.off)
summary(anova)
tuk <- HSD.test(anova, trt = c("plot_type","land_type"))
tuk
#Boxplot
ggplot(data = pom.on.off, aes(x = plot_type, y = percent_n, fill = plot_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
theme_bw() +
labs(x = "Plot Type", y = "Percent N", color = "Site", fill = "Plot Type", title = "Percent N POM Offsite") +
scale_fill_brewer(palette = "Set1")
#Bar
ggplot(data = pom.on.off, aes(x = land_type, y = percent_n, fill = plot_type)) +
geom_bar(stat='identity', position = position_dodge(0.9)) +
theme_bw() +
labs(x = "Date", y = "Percent N", color = "Site", fill = "Land Type", title = "Percent N POM Offsite") +
scale_fill_brewer(palette = "Set1")
#POM C:N
pom.on.off <- pom.on.off %>%
drop_na(CN)
model <- lm(CN ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
skewness(residuals(model))
kurtosis(residuals(model))
pom.on.off$log_cn <- log(pom.on.off$CN)
model <- lm(log_cn ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
pom.on.off$sqrt_cn <- sqrt(pom.on.off$CN)
model <- lm(sqrt_cn ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
model <- lm(CN ~ land_type * plot_type, data = pom.on.off)
bc <- boxcox(model)
(lambda <- bc$x[which.max(bc$y)])
new_model <- lm(((CN^lambda-1)/lambda) ~ land_type * plot_type, data = pom.on.off)
ggqqplot(residuals(new_model))
shapiro.test(residuals(new_model))
pom.on.off$cn_bc <- (pom.on.off$CN^lambda-1)/lambda
pom.on.off %>%
ungroup() %>%
levene_test(cn_bc ~ land_type * plot_type)
kruskal.test(CN ~ plot_type, data = pom.on.off)
pom.on.off$plot_land <- interaction(pom.on.off$land_type, pom.on.off$plot_type)
kruskal.test(CN ~ plot_land, data = pom.on.off)
pom.on.off %>%
dunn_test(CN ~ plot_land,
p.adjust.method = "BH")
anova <- aov(CN ~ land_type * plot_type, data = pom.on.off)
summary(anova)
#Bar graph
anova <- aov(CN ~ land_type * plot_type, data = pom.on.off)
tukey <- TukeyHSD(anova)
tukey
cld <- multcompLetters4(anova, tukey)
dt <- pom.on.off %>%
group_by(plot_type) %>%
summarise(mean = mean(CN),
sd = sd(CN),
n = n(),
se = sd/sqrt(n)) %>%
arrange(desc(mean))
cld <- as.data.frame.list(cld$plot_type)
dt$cld <- cld$Letters
ggplot(data = dt, aes(x = plot_type, y = mean, fill = plot_type)) +
#geom_bar(position = "dodge", stat = "identity") +
geom_bar_pattern(position = "dodge", stat = "identity",
aes(pattern = plot_type),
fill            = 'white',
colour          = 'black',
pattern_spacing = 0.006)  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(.9)) +
theme_classic() +
labs(x = "", y = "C:N", color = "Site") +
geom_text(aes(label = cld, y = mean + se), position=position_dodge(width=0.9), vjust = -0.5, size = 6) +
scale_fill_grey(name = "") +
scale_pattern_discrete(name = "") +
scale_y_continuous(expand=c(0,0), limits = c(0,22)) +
theme(strip.background = element_blank()) +
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 23),
legend.position="none")
?interaction
setwd("C:/Users/Z- 2 user/Box/Data/POXC")
library(ggplot2)
library(dplyr)
library(forcats)
library(agricolae)
library(ggpubr)
library(rstatix)
library(ggpattern)
library(tidyverse)
library(multcompView)
#load data
#poxc values in mg/kg of soil
poxc.june <- read.csv("Data/June 2021/poxc_clean_june_2021.csv")
poxc.june$date <- "June 2021"
poxc.may <- read.csv("Data/May 2022/poxc_clean_may_2022.csv")
poxc.may$date <- "May 2022"
poxc.aug <- read.csv("Data/August 2022/poxc_clean_august_2022.csv")
poxc.aug$date <- "August 2022"
poxc.all <- poxc.june %>%
rbind(poxc.may) %>%
rbind(poxc.aug)
poxc.all$site <- gsub("goshen_road", "goshen", poxc.all$site)
poxc.all$site <- gsub("agronomy_farm", "Agronomy Farm", poxc.all$site)
poxc.all$site <- gsub("allstar_mine_1", "Allstar Mine 1", poxc.all$site)
poxc.all$site <- gsub("allstar_mine_2", "Allstar Mine 2", poxc.all$site)
poxc.all$site <- gsub("jackson_mill", "Jackson Mill", poxc.all$site)
poxc.all$site <- gsub("goshen", "Goshen Road", poxc.all$site)
poxc.all$site <- gsub("reedsville", "Reedsville", poxc.all$site)
poxc.all$crop <- gsub('S', 'Switchgrass', poxc.all$crop)
poxc.all$crop <- gsub('W', 'Willow', poxc.all$crop)
poxc.all$treatment <- gsub('B', 'Biochar', poxc.all$treatment)
poxc.all$treatment <- gsub('C', 'Control', poxc.all$treatment)
poxc.all <- poxc.all %>%
mutate(land_type = if_else(site %in% c("Agronomy Farm", "Reedsville", "Jackson Mill"), "Agriculture", "Mine")) %>%
mutate(site = fct_relevel(site, c("Agronomy Farm", "Jackson Mill", "Reedsville", "Allstar Mine 1", "Allstar Mine 2", "Goshen Road"))) %>%
mutate(date = fct_relevel(date, c("June 2021", "May 2022")))
#Testing normality of distribution
qqnorm(poxc.all$poxc, plot.it = TRUE, pch = 4, cex = 0.7)
qqline(poxc.all$poxc, col = "red", lwd = 2)
model <- lm(poxc ~ land_type * date * crop * treatment, data = poxc.all)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
ggqqplot(poxc.all, "poxc", ggtheme = theme_bw()) +
facet_grid(date + land_type ~ crop + treatment, labeller = "label_both")
normality <- poxc.all %>%
group_by(land_type, crop, date, treatment) %>%
shapiro_test(poxc) %>%
subset(p <= .05)
ggplot(data = poxc.all, aes(x = date, y = poxc)) +
geom_boxplot() +
geom_jitter(aes(color = site), alpha = .3) +
facet_grid(site ~ crop)
crops <- c("Switchgrass", "Willow")
names(crops) <- c("S","W")
ggplot(data = poxc.all, aes(x = date, y = poxc, fill = land_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
facet_grid(site ~ crop, labeller = labeller(crop = crops)) +
theme_bw() +
labs(x = "Date", y = "Bioavailable Carbon (mg/kg of soil)", color = "Site", fill = "Land Type", title = "Bioavailable C per Site, Crop, and Date") +
scale_fill_brewer(palette = "Dark2")
#homogneity of variance assumption test
poxc.all %>%
ungroup() %>%
levene_test(poxc ~ land_type * date * crop * treatment)
anova <- aov(poxc ~ site * crop * treatment * date, data = poxc.all)
summary(anova)
TukeyHSD(aov(poxc ~ date + site + site*date, data = poxc.all), conf.level = .95)
plot(TukeyHSD(aov(poxc ~ date + site + site*date, data = poxc.all), conf.level = .95, which = "date"))
plot(TukeyHSD(aov(poxc ~ date + site + site*date, data = poxc.all), conf.level = .95, which = "site"))
plot(TukeyHSD(aov(poxc ~ date + site + site*date, data = poxc.all), conf.level = .95, which = "date:site"), las =1)
anova <- aov(poxc ~ site * date * treatment * crop, data = poxc.all)
summary(anova)
tuk <- HSD.test(anova, trt = c("site", "date"))
tuk
par(mar=c(12,4,0,4))
bar.group(tuk$groups, ylim = c(0,1500), density = 10, border = "blue", las = 2)
test <- HSD.test(anova, trt = c("site", "date"), group = T)
test
par(mar=c(11,4,4,4))
bar.group(test$groups, ylim = c(0,1500), density = 10, border = "blue", las = 2)
test <- HSD.test(anova, trt = c("site"), group = T)
test
par(mar=c(7,4,1,1))
bar.group(test$groups, ylim = c(0,1500), density = 10, border = "blue", las = 2)
test <- HSD.test(anova, trt = c("date"), group = T)
test
par(mar=c(7,4,1,1))
bar.group(test$groups, ylim = c(0,1500), density = 10, border = "blue", las = 2)
par(mar=c(4,4,4,4))
ggHSD(tuk, interactive = T, las = 1)
tuk.ag <- HSD.test(anova, trt = "date", group = T)
tuk.ag
bar.group(tuk.ag$groups, ylim = c(0,1500), density = 10, border = "blue", las = 2)
#anova by land type
model <- lm(poxc ~ land_type * date * crop * treatment, data = poxc.all)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
poxc.all %>%
ungroup() %>%
levene_test(poxc ~ land_type * date * crop * treatment)
anova <- aov(poxc ~ land_type * date * treatment * crop, data = poxc.all)
summary(anova)
tuk <- HSD.test(anova, trt = c("land_type", "date"))
tuk
tuk <- HSD.test(anova, trt = c("land_type", "date", "crop"))
tuk
model <- aov(poxc ~ land_type * date * crop, data = poxc.all)
TukeyHSD(model)
##Viz
#Boxplot
ggplot(data = poxc.all, aes(x = date, y = poxc, fill = land_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
#facet_grid(land_type) +
theme_bw() +
labs(x = "Date", y = "Bioavailable Carbon (mg/kg of soil)", color = "Site", fill = "Land Type", title = "Bioavailable C per Site, Crop, and Date") +
scale_fill_brewer(palette = "Dark2")
ggplot(data = poxc.all, aes(x = date, y = poxc, fill = crop)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
facet_grid(land_type ~ .) +
theme_bw() +
labs(x = "Date", y = "Bioavailable Carbon (mg/kg of soil)", color = "Site", fill = "Land Type", title = "Bioavailable C per Site, Crop, and Date") +
scale_fill_brewer(palette = "Set1")
setwd("C:/Users/Z- 2 user/Box/Data/POM & MAOM")
library(dplyr)
library(tidyverse)
library(ggplot2)
library(readxl)
library(agricolae)
library(ggpubr)
library(rstatix)
library(MASS)
library(ggpattern)
library(multcompView)
pom.maom.june <- read.csv("Data/June 2021/pom_maom_2021.csv")
pom.maom.june$date <- c("June 2021")
pom.maom.aug <- read.csv("Data/August 2022/pom_maom_2022.csv") %>%
dplyr::select(-ratio) ##Once we have all weight data, can remove, but might not need ratio anyway
pom.maom.aug$date <- c("August 2022")
pom.maom.all <- rbind(pom.maom.aug, pom.maom.june)
pom.maom.all$site <- gsub("goshen_road", "goshen", pom.maom.all$site)
pom.maom.all$site <- gsub("agronomy_farm", "Agronomy Farm", pom.maom.all$site)
pom.maom.all$site <- gsub("allstar_mine_1", "Allstar Mine 1", pom.maom.all$site)
pom.maom.all$site <- gsub("allstar_mine_2", "Allstar Mine 2", pom.maom.all$site)
pom.maom.all$site <- gsub("jackson_mill", "Jackson Mill", pom.maom.all$site)
pom.maom.all$site <- gsub("goshen", "Goshen Road", pom.maom.all$site)
pom.maom.all$site <- gsub("reedsville", "Reedsville", pom.maom.all$site)
pom.maom.all$treatment <- gsub("F", "C", pom.maom.all$treatment)
pom.maom.all$crop <- gsub('S', 'Switchgrass', pom.maom.all$crop)
pom.maom.all$crop <- gsub('W', 'Willow', pom.maom.all$crop)
pom.maom.all$treatment <- gsub('B', 'Biochar', pom.maom.all$treatment)
pom.maom.all$treatment <- gsub('C', 'Control', pom.maom.all$treatment)
pom.maom.all <- pom.maom.all %>%
mutate(land_type = if_else(site %in% c("Agronomy Farm", "Reedsville", "Jackson Mill"), "Agriculture", "Mine")) %>%
mutate(site = fct_relevel(site, c("Agronomy Farm", "Jackson Mill", "Reedsville", "Allstar Mine 1", "Allstar Mine 2", "Goshen Road"))) %>%
mutate(date = fct_relevel(date, c("June 2021", "August 2022")))
ggplot(data = pom.maom.all, aes(x = date, y = fraction_weight_g, color = fraction)) +
geom_boxplot() +
geom_jitter(alpha = .3) +
facet_grid(site ~ crop)
#C:N Ratio
pom.maom.all$CN <- (pom.maom.all$percent_c)/(pom.maom.all$percent_n)
pom <- pom.maom.all %>%
subset(fraction %in% c("POM"))
ggplot(data = pom, aes(x = date, y = fraction_weight_g, color = land_type)) +
geom_boxplot() +
geom_jitter(alpha = .3) +
facet_grid(site ~ crop) +
labs(x = "Date", y = "Weight (g)", title = "POM Fraction Weights")
maom <- pom.maom.all %>%
subset(fraction %in% c("MAOM"))
##Remove outliers
pom.stat <- pom %>%
drop_na(fraction_weight_g) %>%
group_by(land_type, date, crop, treatment) %>%
mutate(mean = mean(fraction_weight_g),
two.sd = 2*sd(fraction_weight_g),
z.score = abs(((fraction_weight_g-mean(fraction_weight_g))/sd(fraction_weight_g))))
pom.g <- filter(pom.stat, z.score < 2)
maom.stat <- maom %>%
drop_na(fraction_weight_g) %>%
group_by(land_type, date, crop, treatment) %>%
mutate(mean = mean(fraction_weight_g),
two.sd = 2*sd(fraction_weight_g),
z.score = abs(((fraction_weight_g-mean(fraction_weight_g))/sd(fraction_weight_g))))
maom.g <- filter(maom.stat, z.score < 2)
ggplot(data = maom.g, aes(x = date, y = fraction_weight_g, color = land_type)) +
geom_boxplot() +
geom_jitter(alpha = .3) +
facet_grid(site ~ crop) +
labs(x = "Date", y = "Weight (g)", title = "MAOM Fraction Weights")
qqnorm(pom.g$fraction_weight_g, plot.it = TRUE, pch = 4, cex = 0.7)
qqline(pom.g$fraction_weight_g, col = "red", lwd = 2)
model <- lm(fraction_weight_g ~ land_type * date * crop * treatment, data = pom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(pom.g$fraction_weight_g))
pom.g$cbrt_weight <- pom.g$fraction_weight_g^(1/3)
model <- lm(cbrt_weight ~ land_type * date * crop * treatment, data = pom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(pom.g$cbrt_weight))
pom.g$sqrt_weight <- sqrt(pom.g$fraction_weight_g)
model <- lm(sqrt_weight ~ land_type * date * crop * treatment, data = pom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(pom.g$sqrt_weight))
pom.g$log_weight <- log(pom.g$fraction_weight_g)
model <- lm(log_weight ~ land_type * date * crop * treatment, data = pom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(pom.g$log_weight))
model <- lm(fraction_weight_g ~ land_type * date * crop * treatment, data = pom.g)
bc <- boxcox(model)
(lambda <- bc$x[which.max(bc$y)])
new_model <- lm(((fraction_weight_g^lambda-1)/lambda) ~ land_type * date * crop * treatment, data = pom.g)
ggqqplot(residuals(new_model))
shapiro.test(residuals(new_model))
pom.g$weight_bc <- (pom.g$fraction_weight_g^lambda-1)/lambda
pom.g %>%
ungroup() %>%
levene_test(weight_bc ~ land_type * date * crop * treatment)
qqnorm(maom.g$fraction_weight_g, plot.it = TRUE, pch = 4, cex = 0.7)
qqline(maom.g$fraction_weight_g, col = "red", lwd = 2)
model <- lm(fraction_weight_g ~ land_type * date * crop * treatment, data = maom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(maom.g$fraction_weight_g))
maom.g$cbrt_weight <- (max(maom.g$fraction_weight_g + 1) - maom.g$fraction_weight_g)^(1/3)
model <- lm(cbrt_weight ~ land_type * date * crop * treatment, data = maom.g)
ggqqplot(residuals(model))
shapiro.test(residuals(model))
plot(density(maom.g$cbrt_weight))
maom.g %>%
ungroup() %>%
levene_test(cbrt_weight ~ land_type * date * crop * treatment)
anova <- aov(weight_bc ~ land_type * crop * treatment * date, data = pom.g)
summary(anova)
tuk <- HSD.test(anova, trt = c("land_type", "date"))
tuk
#Boxplot
ggplot(data = pom.g, aes(x = date, y = weight_bc, fill = land_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
#facet_grid(crop ~ treatment, labeller = labeller(crop = crops)) +
theme_bw() +
labs(x = "Date", y = "Weight (g)", color = "Site", fill = "Land Type", title = "POM Weight") +
scale_fill_brewer(palette = "Dark2")
ggplot(data = pom.g, aes(x = crop, y = weight_bc, fill = crop)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
#facet_grid(crop ~ treatment, labeller = labeller(crop = crops)) +
theme_bw() +
labs(x = "Date", y = "Weight (g)", color = "Crop", fill = "Land Crop", title = "POM Weight") +
scale_fill_brewer(palette = "Set1")
#Bar
#Land Type and date
anova <- aov(weight_bc ~ land_type * date * treatment * crop, data = pom.g)
tukey <- TukeyHSD(anova)
tukey
cld <- multcompLetters4(anova, tukey)
dt <- pom.g %>%
group_by(land_type, date) %>%
summarise(mean = mean(fraction_weight_g),
sd = sd(fraction_weight_g),
n = n(),
se = sd/sqrt(n)) %>%
arrange(desc(mean))
cld <- as.data.frame.list(cld$`land_type:date`)
dt$cld <- cld$Letters
ggplot(data = dt, aes(x = date, y = mean, fill = land_type)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(.9)) +
theme_classic() +
labs(x = "", y = "Weight (g)", color = "Site", fill = "Land Type") +
geom_text(aes(label = cld, y = mean + se), position=position_dodge(width=0.9), vjust = -0.5, size = 8) +
scale_fill_grey(name = "") +
scale_y_continuous(expand=c(0,0), limits = c(0,4.2)) +
theme(text = element_text(size = 23),
axis.text.x = element_text(size = 23))
#Crop
anova <- aov(weight_bc ~ land_type * date * treatment * crop, data = pom.g)
tukey <- TukeyHSD(anova)
tukey
cld <- multcompLetters4(anova, tukey)
dt <- pom.g %>%
group_by(crop) %>%
summarise(mean = mean(fraction_weight_g),
sd = sd(fraction_weight_g),
n = n(),
se = sd/sqrt(n)) %>%
arrange(desc(mean))
cld <- as.data.frame.list(cld$crop)
dt$cld <- cld$Letters
ggplot(data = dt, aes(x = crop, y = mean, fill = crop)) +
geom_bar_pattern(position = "dodge", stat = "identity",
aes(pattern = crop),
fill            = 'white',
colour          = 'black',
pattern_spacing = 0.025) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(.9)) +
theme_classic() +
labs(x = "", y = "Weight (g)", color = "Site", fill = "Land Type") +
geom_text(aes(label = cld, y = mean + se), position=position_dodge(width=0.9), vjust = -0.5, size = 8) +
scale_fill_grey(name = "") +
scale_pattern_discrete(name = "") +
scale_y_continuous(expand=c(0,0), limits = c(0,3.5)) +
theme(text = element_text(size = 23),
legend.position="none",
axis.text.x = element_text(size = 23))
anova <- aov(cbrt_weight ~ land_type * crop * treatment * date, data = maom.g)
summary(anova)
tuk <- HSD.test(anova, trt = c("land_type", "date"))
tuk
#Boxplot
ggplot(data = maom.g, aes(x = date, y = cbrt_weight, fill = land_type)) +
geom_boxplot(alpha = .2) +
geom_jitter(alpha = .4) +
#facet_grid(crop ~ ., labeller = labeller(crop = crops)) +
theme_bw() +
labs(x = "Date", y = "Weight (g)", color = "Site", fill = "Land Type", title = "MAOM Weight") +
scale_fill_brewer(palette = "Dark2")
#Bar
anova <- aov(cbrt_weight ~ land_type * crop * treatment * date, data = maom.g)
tukey <- TukeyHSD(anova)
tukey
cld <- multcompLetters4(anova, tukey)
dt <- maom.g %>%
group_by(land_type, date) %>%
summarise(mean = mean(fraction_weight_g),
sd = sd(fraction_weight_g),
n = n(),
se = sd/sqrt(n)) %>%
arrange(desc(mean))
cld <- as.data.frame.list(cld$`land_type:date`)
dt$cld <- cld$Letters
ggplot(data = dt, aes(x = date, y = mean, fill = land_type)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(.9)) +
theme_classic() +
labs(x = "", y = "Weight (g)", color = "Site", fill = "Land Type") +
geom_text(aes(label = cld, y = mean + se), position=position_dodge(width=0.9), vjust = -0.5, size = 8) +
scale_fill_grey(name = "") +
scale_y_continuous(expand=c(0,0), limits = c(0,9)) +
theme(text = element_text(size = 23),
axis.text.x = element_text(size = 23))
